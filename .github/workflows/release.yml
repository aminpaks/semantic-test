name: Release

on:
  push:
    branches:
      - prelease-action

jobs:
  release:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    name: Build
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install Dependencies
      run: yarn install --pure-lockfile --non-interactive --no-progress
    
    - name: Build
    - run: yarn run typecheck --diagnostics
    - run: yarn run build
    - name: Zip artifacts
      run: zip -r v0.3.0.zip public

    - uses: actions/upload-artifact@v2
      with:
        name: my-artifact
        path: path/to/artifact/world.txt